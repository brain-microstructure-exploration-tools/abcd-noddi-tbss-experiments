#!/bin/bash
set -e

if [[ $# -ne 4 ]]; then
  echo "Usage: ./transform_to_template.sh <INPUT_DIR> <OUTPUT_DIR> <WARPS_DIR> <TEMPLATE>"
  echo "  where INPUT_DIR is the directory containing input images (possibly in subdirectories) to warp"
  echo "  and OUTPUT_DIR is the target directory in which to save the warped images"
  echo "  and WARPS_DIR is the directory containing the transformations saved by mrtrix3 population_template"
  echo "  and TEMPLATE is the path to the population template file generated by mrtrix3 population_template"
  exit
fi

INPUT_DIR=$1
OUTPUT_DIR=$2
WARPS_DIR=$3
TEMPLATE=$4

find "$INPUT_DIR" -type f -name "*.nii.gz" | while read -r FILE_IN; do
    FILE_OUT=$OUTPUT_DIR/${FILE_IN#*/}

    # ABCD dwi image filenames look like
    # sub-NDARINVNLN4DGBT_ses-2YearFollowUpYArm1_run-01_dwi.nii
    # and then we save images with somehting else tacked on to the name like
    # sub-NDARINVNLN4DGBT_ses-2YearFollowUpYArm1_run-01_dwi_fa.nii.gz
    # so this next line is meant to remove anything after the "dwi" at the end to get a basename like
    # sub-NDARINVNLN4DGBT_ses-2YearFollowUpYArm1_run-01_dwi
    BASENAME=$(python -c "from pathlib import Path; s=Path('$FILE_IN').name; print(s[:s.find('dwi')+3])")

    mkdir -p $(dirname $FILE_OUT)

    WARP_FILE=$WARPS_DIR/$BASENAME.mif
    mrtransform $FILE_IN $FILE_OUT -warp_full $WARP_FILE -template $TEMPLATE -reorient_fod no
done